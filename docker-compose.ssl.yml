version: '3.8'

services:
  app:
    build: .
    container_name: atlassian-audit-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - ATLASSIAN_API_KEY=${ATLASSIAN_API_KEY}
      - ATLASSIAN_BASE_URL=${ATLASSIAN_BASE_URL}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - JIRA_BASE_URL=${JIRA_BASE_URL}
      - SIEM_WEBHOOK_URL=${SIEM_WEBHOOK_URL}
      - STORAGE_TYPE=${STORAGE_TYPE:-simple}
    volumes:
      - audit_data:/app/data
    networks:
      - audit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: atlassian-audit-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    depends_on:
      - app
    networks:
      - audit_network
    restart: unless-stopped
    command: /bin/sh -c "envsubst '$$DOMAIN_NAME' < /etc/nginx/nginx.conf > /tmp/nginx.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: atlassian-audit-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

volumes:
  audit_data:
    driver: local

networks:
  audit_network:
    driver: bridge
